{"version":3,"sources":["components/Navbar.js","customHooks/useFetch.js","components/MovieBoxPanel.js","components/MovieList.js","components/Home.js","components/SearchFilms.js","components/FilmReviewTile.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","useFetch","url","useState","data","setData","useEffect","fetch","then","res","json","console","log","catch","err","MovieBoxPanel","mov","posterPath","id","useParams","useHistory","title","name","overview","src","poster_path","alt","onClick","e","movieId","trailerArray","process","results","length","map","el","type","push","key","window","open","currentButton","target","textContent","handleTrailerButton","m","preventDefault","handleMovieReview","MovieList","movies","youTubePath","Home","queryString","apiKey","SearchFilms","filmName","setFilmName","filmArrayList","setFilmArrayList","onChange","value","handleFilmSearchName","filmListResults","handleFilmSearchClick","item","FilmReviewTile","filmReview","setFilmReview","author","content","About","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51d9e151.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n\n    return (\n        <div className=\"navbarMain\">\n            <ul className=\"navbarMainListBox\">\n                <Link to=\"/\" className=\"navbarMainListBox-item\">Home</Link>\n                <Link to=\"/searchfilms\" className=\"navbarMainListBox-item\">Search films</Link>\n                <Link to=\"/filmnews\" className=\"navbarMainListBox-item\">Film news</Link>\n                <Link to=\"/about\" className=\"navbarMainListBox-item\">About</Link>\n            </ul>\n        </div>\n      );\n}\n \nexport default Navbar;","import { useEffect, useState } from 'react';\n\nconst useFetch = (url) => {\n\n    const [data, setData] = useState(null);\n\n     useEffect(() => {\n        fetch(url)\n            .then((res) => res.json())\n            .then((data) => {\n            setData(data);\n            console.log(data);\n            })\n            .catch((err) => {\n                console.log('couldnt connect - this is an error in Russells machine')\n            })    \n    },[url]);\n    return {\n        data\n    };\n};\n\nexport default useFetch;","import {    useParams, Link, useHistory } from 'react-router-dom';\n\nconst MovieBoxPanel = ({mov, posterPath}) => {\n\n    let { id } = useParams();\n    let history = useHistory();\n    console.log(id);\n\n    const handleTrailerButton = (movieId,e) => {\n        let trailerArray = [];\n        fetch(`https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${process.env.REACT_APP_THEMOVIEDB_API_KEY}&append_to_response=videos`)\n        .then(data => data.json())\n        .then((res) => {\n            console.log(res);\n            if(res.results.length > 0) {\n                res.results.map((el) => {\n                    if(el.type === 'Trailer') {\n                        trailerArray.push(el.key);\n                    }\n                \n                })   \n            }\n            if(trailerArray.length > 0) {\n                window.open(`https://www.youtube.com/watch?v=${trailerArray[0]}`); \n            } else if(trailerArray.length == 0) {\n                let currentButton = e.target;\n                console.log(currentButton);\n                currentButton.textContent = 'Sorry no trailer available';\n            }\n        })\n    };\n\n    const handleMovieReview = (m,e) => {\n        e.preventDefault();\n        window.open(`/filmreview/${m.id}`,`_blank`);\n    }\n\n    return (  \n        <div className=\"movieListMain-filmBox\" key={mov.id}>\n            <h2 className=\"movieListmain-filmBox-filmTitle\">{mov.title || mov.name}</h2>\n            <p className=\"movieListMain-filmBox-filmOverview\">{mov.overview}</p>\n            {<img className=\"movieListMain-filmBox-img\" src={`${posterPath}${mov.poster_path}`} alt=\"filmPoster\"/>}\n            <button className=\"movieListMain-filmBox-btn\" onClick={(e) => {handleTrailerButton(mov.id,e)}}>Watch Trailer</button>\n                <p className=\"noTrailerDiv\"></p>\n            <button className=\"movieListMain-filmBox-btn\" onClick={(e) => {handleMovieReview(mov,e)}}>Movie Review</button>\n\n        </div>\n    );\n}\n \nexport default MovieBoxPanel;","import MovieBoxPanel from './MovieBoxPanel';\n\n\nconst MovieList = ({movies}) => {\n\n    const posterPath = 'https://image.tmdb.org/t/p/w500';\n    let youTubePath = \"'window.open(`https://www.youtube.com/watch?v=${trailerObject.key}`,'_blank');'\";\n      \n    return ( \n        <div className=\"movieListMain\">\n                {movies.results.map((mov) => (\n                    <MovieBoxPanel mov={mov} posterPath={posterPath} youTubePath={youTubePath} key={mov.id} />\n                ))}\n        </div>\n     );\n}\n \nexport default MovieList;","import useFetch from '../customHooks/useFetch';\nimport MovieList from './MovieList';\n\nconst Home = () => {\n\n    const queryString = 'https://api.themoviedb.org/3/trending/all/day?api_key=';\n    const { data:movies } = useFetch(queryString+process.env.REACT_APP_THEMOVIEDB_API_KEY);\n\n    return (\n        <div className=\"homeMain\">\n            <h2 className=\"homeMain-Header\">Welcome to the latest films</h2>\n            <h2 className=\"homeMain-slogan\">We have the latest film releases, and all the latest exciting film trailers for you</h2>\n            { movies && <MovieList movies={movies} apiKey={process.env.REACT_APP_THEMOVIEDB_API_KEY} />}\n        </div>\n      );\n}\n\nexport default Home;","import { useState } from 'react';\nimport MovieBoxPanel from './MovieBoxPanel';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst SearchFilms = () => {\n    \n    let history = useHistory();\n    let [ filmName,setFilmName ] = useState(null); \n    let [ filmArrayList, setFilmArrayList ] = useState(null);\n    const posterPath = 'https://image.tmdb.org/t/p/w500';\n\n    let handleFilmSearchClick = (e) => {\n        e.preventDefault();\n        fetch(`${process.env.REACT_APP_THEMOVIEDB_URL}${process.env.REACT_APP_THEMOVIEDB_API_KEY}&language=en-US&query=${filmName}&page=1`)\n            .then((data) => {\n                return data.json()\n            })\n            .then((filmListResults) => {\n                setFilmArrayList(filmListResults.results);\n                console.log(filmArrayList)\n            })\n    }\n\n    let handleFilmSearchName = (e) =>{\n        setFilmName(e.target.value);\n    }  \n\n    return ( \n        <div className=\"searchFilmsMain\">\n            <h2>Search films</h2>\n            <form>\n                <label>Enter Film Name</label>\n                <input onChange={(e) => {handleFilmSearchName(e)}} type=\"text\"/>\n                <button onClick={(e) => {handleFilmSearchClick(e)}}>Search...</button>\n            </form>\n            { filmArrayList && filmArrayList.map((item) => (\n                <Link to={`/filmreview/${item.id}`}><MovieBoxPanel mov={item} key={item.id} posterPath={posterPath} /></Link>\n            ))}\n        </div>\n     );\n}\n \nexport default SearchFilms;","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\n\nconst FilmReviewTile = () => {\n    let [ filmReview, setFilmReview ] = useState(null)\n    const { id } = useParams();\n    console.log('this is the id' + id);\n  \n    useEffect(() => {\n        fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_THEMOVIEDB_API_KEY}&language=en-US&page=1`)\n            .then(data =>  data.json())\n            .then((res) => {\n                setFilmReview(res.results);\n                console.log(res.results);\n            })\n    },[]) \n\n    return ( \n        <div className=\"filmReviewTile-main\">\n            <h2>Film Review </h2>\n            {filmReview &&  \n                <div className=\"filmReviewTile\">\n\n                    <h2>{filmReview[0] ? `Review Author: ${filmReview[0].author}` :  \"This film has not yet been reviewed\"}</h2>\n                    <p>{filmReview[0]  ? filmReview[0].content : \"This film has not yet been reviewed\"}</p>\n                    {/* <h2>{filmReview[0].author || \"This film has not yet been reviewed\"}</h2>\n                    <p>{filmReview[0].content || \"This film has not yet been reviewed\"}</p> */}\n                </div> }\n        </div>\n     );\n}\n \nexport default FilmReviewTile;\n","const About = () => {\n    return ( \n        <div className=\"aboutMain\">\n            <h2>Under construction.</h2>\n        </div>\n     );\n}\n \nexport default About;","import './index.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport SearchFilms from './components/SearchFilms';\nimport FilmReviewTile from './components/FilmReviewTile';\nimport About from './components/About';\n\n\n\n\nfunction App() {\n  return (\n      <Router basename=\"/latestfilms\" >\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n          <Switch>\n            <Route path=\"/searchfilms\">\n              <SearchFilms />\n            </Route>\n          </Switch>\n          <Switch>\n            <Route path=\"/filmreview/:id\">\n              <FilmReviewTile />\n            </Route>\n          </Switch>\n          <Switch>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}